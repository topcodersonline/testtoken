{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Betterscan", "informationUri": "https://betterscan.io", "semanticVersion": "0.9.9", "rules": [{"id": "0", "name": "BetterscanRule", "shortDescription": {"text": "RSAprivatekey"}, "fullDescription": {"text": "RSAprivatekey"}, "helpUri": "https://betterscan.io", "help": {"markdown": "RSAprivatekey", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "1", "name": "BetterscanRule", "shortDescription": {"text": "DemoTypeI is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls."}, "fullDescription": {"text": "DemoTypeI is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls."}, "helpUri": "https://betterscan.io", "help": {"markdown": "DemoTypeI is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "2", "name": "BetterscanRule", "shortDescription": {"text": "DemoTypeIDelete is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls."}, "fullDescription": {"text": "DemoTypeIDelete is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls."}, "helpUri": "https://betterscan.io", "help": {"markdown": "DemoTypeIDelete is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "3", "name": "BetterscanRule", "shortDescription": {"text": "CWE-20: Check buffer boundaries if used in a loop including recursive loops\n"}, "fullDescription": {"text": "CWE-20: Check buffer boundaries if used in a loop including recursive loops\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "CWE-20: Check buffer boundaries if used in a loop including recursive loops\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "4", "name": "BetterscanRule", "shortDescription": {"text": "Avoid making DML operations in Apex class constructor or initializers"}, "fullDescription": {"text": "Avoid making DML operations in Apex class constructor or initializers"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Avoid making DML operations in Apex class constructor or initializers", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "5", "name": "BetterscanRule", "shortDescription": {"text": "Apex classes should declare a sharing model if DML or SOQL is used"}, "fullDescription": {"text": "Apex classes should declare a sharing model if DML or SOQL is used"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Apex classes should declare a sharing model if DML or SOQL is used", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "6", "name": "BetterscanRule", "shortDescription": {"text": "Missing ApexDoc comment"}, "fullDescription": {"text": "Missing ApexDoc comment"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Missing ApexDoc comment", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "7", "name": "BetterscanRule", "shortDescription": {"text": "Validate CRUD permission before SOQL/DML operation"}, "fullDescription": {"text": "Validate CRUD permission before SOQL/DML operation"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Validate CRUD permission before SOQL/DML operation", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "8", "name": "BetterscanRule", "shortDescription": {"text": "The Anti-forgery token is missing. Without this validation, an attacker could send a link to the victim and, visiting the malicious link, a web page would trigger a POST request (because it is a blind attack - the attacker does not see a response to the triggered request and does not have the use of the GET request and GET requests must not change a server state by default) for the site. The victim would not be able to recognize that an action is taken in the background, but his cookie would be sent automatically if he was authenticated on the website. This attack requires no special interaction other than visiting a website."}, "fullDescription": {"text": "The Anti-forgery token is missing. Without this validation, an attacker could send a link to the victim and, visiting the malicious link, a web page would trigger a POST request (because it is a blind attack - the attacker does not see a response to the triggered request and does not have the use of the GET request and GET requests must not change a server state by default) for the site. The victim would not be able to recognize that an action is taken in the background, but his cookie would be sent automatically if he was authenticated on the website. This attack requires no special interaction other than visiting a website."}, "helpUri": "https://betterscan.io", "help": {"markdown": "The Anti-forgery token is missing. Without this validation, an attacker could send a link to the victim and, visiting the malicious link, a web page would trigger a POST request (because it is a blind attack - the attacker does not see a response to the triggered request and does not have the use of the GET request and GET requests must not change a server state by default) for the site. The victim would not be able to recognize that an action is taken in the background, but his cookie would be sent automatically if he was authenticated on the website. This attack requires no special interaction other than visiting a website.", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "9", "name": "BetterscanRule", "shortDescription": {"text": "my $prompt2 = \"$ENV{USER1}\\@$host\";\n"}, "fullDescription": {"text": "my $prompt2 = \"$ENV{USER1}\\@$host\";\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "my $prompt2 = \"$ENV{USER1}\\@$host\";\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "10", "name": "BetterscanRule", "shortDescription": {"text": "my $prompt1 = \"$ENV{USER1}\\@$host\";\n"}, "fullDescription": {"text": "my $prompt1 = \"$ENV{USER1}\\@$host\";\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "my $prompt1 = \"$ENV{USER1}\\@$host\";\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "11", "name": "BetterscanRule", "shortDescription": {"text": "my $prompt = \"$ENV{USER}\\@$host\";\n"}, "fullDescription": {"text": "my $prompt = \"$ENV{USER}\\@$host\";\n"}, "helpUri": "https://betterscan.io", "help": {"markdown": "my $prompt = \"$ENV{USER}\\@$host\";\n", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "12", "name": "BetterscanRule", "shortDescription": {"text": "Private Key"}, "fullDescription": {"text": "Private Key"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Private Key", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}, {"id": "13", "name": "BetterscanRule", "shortDescription": {"text": "Ensure top-level permissions are not set to write-all"}, "fullDescription": {"text": "Ensure top-level permissions are not set to write-all"}, "helpUri": "https://betterscan.io", "help": {"markdown": "Ensure top-level permissions are not set to write-all", "text": ""}, "defaultConfiguration": {"level": "warning"}, "properties": {"tags": ["security"]}}]}}, "results": [{"ruleId": "0", "message": {"text": "RSAprivatekey"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 12}}}]}, {"ruleId": "1", "message": {"text": "DemoTypeI is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 31}}}]}, {"ruleId": "2", "message": {"text": "DemoTypeIDelete is a state-changing MVC method that does not validate the antiforgery token or do strict content-type checking. State-changing controller methods should either enforce antiforgery tokens or do strict content-type checking to prevent simple HTTP request types from bypassing CORS preflight controls."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 44}}}]}, {"ruleId": "3", "message": {"text": "CWE-20: Check buffer boundaries if used in a loop including recursive loops\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 12}}}]}, {"ruleId": "4", "message": {"text": "Avoid making DML operations in Apex class constructor or initializers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 2}}}]}, {"ruleId": "5", "message": {"text": "Apex classes should declare a sharing model if DML or SOQL is used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 1}}}]}, {"ruleId": "6", "message": {"text": "Missing ApexDoc comment"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 1}}}]}, {"ruleId": "7", "message": {"text": "Validate CRUD permission before SOQL/DML operation"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 3}}}]}, {"ruleId": "8", "message": {"text": "The Anti-forgery token is missing. Without this validation, an attacker could send a link to the victim and, visiting the malicious link, a web page would trigger a POST request (because it is a blind attack - the attacker does not see a response to the triggered request and does not have the use of the GET request and GET requests must not change a server state by default) for the site. The victim would not be able to recognize that an action is taken in the background, but his cookie would be sent automatically if he was authenticated on the website. This attack requires no special interaction other than visiting a website."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 9}}}]}, {"ruleId": "9", "message": {"text": "my $prompt2 = \"$ENV{USER1}\\@$host\";\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 5}}}]}, {"ruleId": "10", "message": {"text": "my $prompt1 = \"$ENV{USER1}\\@$host\";\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 4}}}]}, {"ruleId": "11", "message": {"text": "my $prompt = \"$ENV{USER}\\@$host\";\n"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 3}}}]}, {"ruleId": "12", "message": {"text": "Private Key"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 1}}}]}, {"ruleId": "13", "message": {"text": "Ensure top-level permissions are not set to write-all"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "Please upgrade to PRO"}, "region": {"startLine": 1}}}]}]}]}